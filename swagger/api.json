openapi: 3.0.3
info:
  title: HelloPy Backend API
  version: 0.1.0
paths:
  /api/faqs/:
    get:
      operationId: faqs_list
      description: |-
        ## 모든 FAQ 목록 조회
        ### 특징 : is_deleted는 제외
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - faqs
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFAQList'
          description: ''
    post:
      operationId: faqs_create
      description: |-
        ## 새로운 FAQ 생성
        - HelloPy 초기 홈페이지를 위한 api 아니며
          추후 createㅏ 페이지 생성을 고려한 함수
        - 성공시 status : SUCCESS
        - 실패시 status : ERROR
      tags:
      - faqs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FAQ'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FAQ'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FAQ'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FAQ'
          description: ''
  /api/faqs/{id}/:
    get:
      operationId: faqs_retrieve
      description: '## 특정 FAQ 조회'
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this FAQ.
        required: true
      tags:
      - faqs
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FAQ'
          description: ''
    put:
      operationId: faqs_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this FAQ.
        required: true
      tags:
      - faqs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FAQ'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FAQ'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FAQ'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FAQ'
          description: ''
    patch:
      operationId: faqs_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this FAQ.
        required: true
      tags:
      - faqs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFAQ'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFAQ'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFAQ'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FAQ'
          description: ''
    delete:
      operationId: faqs_destroy
      description: |-
        ## FAQ 삭제 (Soft Delete)
        - 실제 삭제가 아닌 `is_deleted=True`로 변경
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this FAQ.
        required: true
      tags:
      - faqs
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    FAQ:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        question:
          type: string
          title: 질문
          maxLength: 255
        answer:
          type: string
          title: 답변
        is_deleted:
          type: boolean
          title: 삭제 여부
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - answer
      - created_at
      - id
      - question
      - updated_at
    PaginatedFAQList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/FAQ'
    PatchedFAQ:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        question:
          type: string
          title: 질문
          maxLength: 255
        answer:
          type: string
          title: 답변
        is_deleted:
          type: boolean
          title: 삭제 여부
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
